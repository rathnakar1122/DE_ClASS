*********:
 GCP Data Engineer Course:
*********: 
--------------------------
DATE - 7:40 AM 12/9/2024:
--------------------------

:SQL PRACTICE:

SQL-Q1. Number of Unique Subjects Taught by Each Teacher

>> TWO ENTITIES (Subject, Teacher) - T-Subs Relation [1 to many][many to one] [Relation - Foreign Keys]

Table: Teacher(Schema)

+-------------+------+
| Column Name | Type |
+-------------+------+
| teacher_id  | int  |Unique |_ PK(two columns)
| subject_id  | int  |Unique |
| dept_id     | int  |FK
+-------------+------+
@ (subject_id, dept_id) is the primary key (combinations of columns with unique values) of this table.
@ Each row in this table indicates that the teacher with teacher_id teaches the subject subject_id in the department dept_id.

Calculations:
	# Write a solution to calculate the number of unique subjects each teacher teaches in the university.
	# Return the result table in any order.

The result format is shown in the following example.

 

Example 1:

Input: 
Teacher table:
+------------+------------+---------+
| teacher_id | subject_id | dept_id |
+------------+------------+---------+
| 1          | 2          | 3       |
| 1          | 2          | 4       |
| 1          | 3          | 3       |
| 2          | 1          | 1       |
| 2          | 2          | 1       |
| 2          | 3          | 1       |
| 2          | 4          | 1       |
+------------+------------+---------+
Output:  
+------------+-----+
| teacher_id | cnt |
+------------+-----+
| 1          | 2   |
| 2          | 4   |
+------------+-----+
Explanation: 
Teacher 1:
  - They teach subject 2 in departments 3 and 4.
  - They teach subject 3 in department 3.
Teacher 2:
  - They teach subject 1 in department 1.
  - They teach subject 2 in department 1.
  - They teach subject 3 in department 1.
  - They teach subject 4 in department 1.
  
CREATE TABLE SCRIPT:
 
Create table If Not Exists Teacher (teacher_id int, subject_id int, dept_id int)

BQ: 
Create table If Not Exists pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id int, subject_id int, dept_id int)

TRUNCATE SCRIPT:

Truncate table pacific-ethos-441506-a1.sql_practice.Teacher

INSERT INTO SCRIPT:

insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('1', '2', '3')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('1', '2', '4')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('1', '3', '3')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '1', '1')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '2', '1')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '3', '1')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '4', '1')

insert into  sqlqueries.Teacher (teacher_id, subject_id, dept_id) values (1, 2, 3),
		(1, 2, 4),
		(1, 3, 3),
		(2, 1, 1),
		(2, 2, 1),
		(2, 3, 1),
		(2, 4, 1)


BigQuery Insert into Script:
----------------------------
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values (1, 2, 3),
		(1, 2, 4),
		(1, 3, 3),
		(2, 1, 1),
		(2, 2, 1),
		(2, 3, 1),
		(2, 4, 1)

Debug this Error From BQ Pespective:
------------------------------------
SELECT list expression references column teacher_id which is neither grouped nor aggregated at [1:8]


Note: If any column is selected or given in select statement in bigquery before or after any aggregated function, it should be either grouped or aggregated.

Solution:

SELECT
  teacher_id,
  COUNT( DISTINCT subject_id) AS cnt
FROM
  pacific-ethos-441506-a1.sql_practice.Teacher
GROUP BY
  1;
  



Error2: for mysql:

Some of your SQL statements failed to execute (Learn more at https://cloud.google.com/sql/docs/mysql/manage-data-using-studio). Details: Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_' at line 2

Solution:


What is the  error in this script:

insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('1', '2', '3')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('1', '2', '4')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('1', '3', '3')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '1', '1')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '2', '1')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '3', '1')
insert into pacific-ethos-441506-a1.sql_practice.Teacher (teacher_id, subject_id, dept_id) values ('2', '4', '1')

Note: 


 
SQL-Q2:

Sales table:
+------------+------------+-------------+
| sale_date | fruit | sold_num |
+------------+------------+-------------+
| 2020-05-01 | apples | 10 |
| 2020-05-01 | oranges | 8 |
| 2020-05-02 | apples | 15 |
| 2020-05-02 | oranges | 15 |
| 2020-05-03 | apples | 20 |
| 2020-05-03 | oranges | 0 |
| 2020-05-04 | apples | 15 |
| 2020-05-04 | oranges | 16 |
+------------+------------+-------------+
 
Write an SQL query to report the difference between number of apples and oranges sold each day.
 
Result table:
+------------+--------------+
| sale_date  | diff |
+------------+--------------+
| 2020-05-01 |  2   |
| 2020-05-02 |  0   |
| 2020-05-03 | 20   |
| 2020-05-04 | -1   |
+------------+--------------+

SELECT SALE_DATE,
SUM (CASE WHEN FRUITS = 'APPLE' THEN SOLD_NUM ELSE 0 END) -
SUM (CASE WHEN FRUITS = 'APPLE ' THEN SOLD_NUM ELSE 0 END ) AS DIFF
FROM SALES 
GROUP BY 
TABLE.